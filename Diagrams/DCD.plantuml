@startuml
!theme plain
skinparam classAttributeIconSize 0
skinparam style strictuml
skinparam linetype ortho
skinparam nodesep 100
skinparam ranksep 100
skinparam padding 2

' Custom styling
skinparam class {
    BackgroundColor White
    BorderColor Black
    ArrowColor Black
    FontName Arial
    FontSize 12
}
skinparam package {
    BackgroundColor White
    BorderColor Black
    FontName Arial
    FontSize 14
}

class UserType <<enumeration>>{
    User
    Admin
    Contingency_Responsible
}
    


' User Interface Layer
package "User Interface" {
    class MainWindow {
        - AddUserButton_Click(object sender, RoutedEventArgs e): void
        - DeleteUserButton_Click(object sender, RoutedEventArgs e): void
    }
}

' Application Layer
package "Application" <<Rectangle>> {
    together {

        class MainViewModel {
            - userRepository: UserRepository
            - imageRepository : ImageRepository
            - colourRepository : ColourRepository
            + usersVMs : ObservableCollection<UserviewModel>
            + colourVMs : ObservableCollection<ColourViewModel>
            + imageVMs : ObservableCollection<ImageViewModel>
           
            + DefaultSettingsCommand : Icommand
            + AddUserCommand : Icommand
            + DeleteUser : Icommand
            + AdminCrudCommand : Icommand
            + AdminLogInCommand : Icommand
            + AdminMenuCommand : Icommand
            + CheckCommand : Icommand
            + CreateGuestCommand : Icommand
            + PersonListCommand : Icommand
            + PlanCommand : Icommand
            + UdatePath : Icommand
            + updateColour : Icommand
            + CheckInOut : Icommand

            + Username <get> : string

            + SelectedUserVM <get> : UserVievModel

           
           
            + MainViewModel() 
            + AddColours() 
            + UpdateColour() 
            + AddImages() 
            + Default()
            + UpdateImage(ID : string)
            + CreateUser(userName:string, name:string, company:string, type:UserType): void
            + DeleteUser(username: String): void
            + FindIndexById(username: String):int
            + UpdateUser(userIndex, userName:string, name:string, company:string, type:UserType): void
            
            
        }


    }

    together {
       
        class UserRepository {
            - users: List<User>
            - checkin_outFilePath: String
            - contingencyFilePath: String

            + CreateUser(userName:string, name:string, company:string, type:UserType): void
            + FindIndexById(username: String): int
            + UpdateUser(userIndex, userName:string, name:string, company:string, type:UserType): void
            + DeleteUser(username: String): void
        }
        class ImageRepository{
        - images : List<ImageTod>

        +ImageRepository()
        +Update(ID:string)
        +GetAll() : List<ImageTod>
        +Default()

        }
        class ColourRepository{
           
            - Colours : List<Colours>

            + ColourRepository()
            + Default()
            + Update(ID : string)
            + GetAll() : List<Colour>
        }
        class ColourViewModel{
        + SelectedColour <get> : string
        
        + ColourViewModel(colour : Colour) 
        }
        class ImageViewModel{
        + selectedPath <get> : string
        
        +ImageViewModel(image : ImageTod)

        }
    }
}

' Domain Layer
package "Domain" <<Rectangle>> {
    together {
        class User {
            - userName: String
            - name: String
            - company: String
        }
       
        class Admin {
            - password: String
        } 
       
        class Contingency_Responsible {
            - password: String
        }
    }
   
    class Contingency {
        - mapPath: String
        - pdfPath: String
        - map: Image
        - pdf: Image
    }
    class ImageTod{
        +selectedPath: string

        + ImageTod()
    }
    class Colour{
        +selectedColour

        +Colour()
    }

}

' UI to Contoller
MainWindow "1" -down- "1" MainViewModel

' MainViewModel to x
MainViewModel "1" -down- "1" UserRepository
MainViewModel "1" -down- "1" Contingency
MainViewModel "1" -down- "1" ColourRepository
MainViewModel "1" -down- "1" ImageRepository
MainViewModel "1" -down- "3" ImageViewModel
MainViewModel "1" -down- "3" ColourViewModel


' Repository to Domain
UserRepository "1" -down- "0..*" User
ColourRepository "1" -down- "0..*"Colour
ImageRepository "1" -down- "0..*"ImageTod

' Inheritance
Admin -up-|> User : inherents <
Contingency_Responsible -up-|> User : inherents <

' Domain Relations
User "0..*" -right- "1" Contingency : views >


'enum
UserRepository .left.> UserType : using >
@enduml